{"version":3,"sources":["redux/reducers/testReducer.js","redux/reducers/giphyReducer.js","redux/reducers/getColor.js","redux/reducers/savecolorReducer.js","redux/reducers/index.js","redux/type.js","redux/store.js","components/Forms/TextInput/index.js","components/Forms/TextInput/TextInput.jsx","redux/actions/getColorActions.js","redux/actions/saveColorActions.js","components/Tile/Tile.jsx","utils/common.js","components/Tile/index.js","pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx","pages/ColorfulTiles/GenerateForm/GenerateForm.jsx","pages/ColorfulTiles/GenerateForm/index.js","pages/ColorfulTiles/ColorfulTiles.jsx","pages/ColorfulTiles/index.js","pages/NotFound/index.js","pages/NotFound/NotFound.jsx","components/Header/data/navData.js","components/Header/NavItem/index.js","components/Header/NavItem/NavItem.jsx","components/Header/index.js","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","data","label","id","trending","offset","loading","name","display","combineReducers","test","state","action","type","payload","giphy","getcolor","rowIdx","columnIdx","newColor","saveColor","middleWares","thunk","applyMW","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","createStore","rootReducer","TextInput","this","props","value","onChange","error","className","Component","generate_tiles2","dispatch","nameColor","displayColor","Tile","updateColor","color","i","Math","floor","random","randomColor","setState","onClick","style","backgroundColor","connect","GenerateHistory","changeDisplay","displaycolors","item","idx","savecolors","namecolors","row","column","nameinput","map","key","splice","rowidx","columnidx","getcolors","GenerateForm","e","target","onGenerate","generate_tiles","setAllToDefault","setTimeout","savethiscolor","push","to","marginBottom","collumn","j","ColorfulTiles","NotFound","url","NavItem","link","Header","navItems","navItem","App","store","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gbAEMA,EAAe,CACnBC,KAAM,GACNC,MAAO,QACPC,GAAI,Q,QCHAH,EAAe,CACnBI,SAAU,CACRC,OAAQ,GAEVC,SAAS,GCJLN,EAAa,CACfC,KAAK,ICDHD,EAAe,CACjBC,KAAK,GACLM,KAAK,GACLC,QAAQ,ICAGC,cAAgB,CAC7BC,KJEa,WAAwC,IAA/BC,EAA8B,uDAAtBX,EAAcY,EAAQ,uCACpD,OAAOA,EAAOC,MACZ,IKVsB,aLWpB,OAAO,eACFF,EADL,CAEEV,KAAMW,EAAOE,UAEjB,QACE,OAAOH,IITXI,MHEa,WAAwC,IAA/BJ,EAA8B,uDAAtBX,EAAcY,EAAQ,uCACpD,OAAOA,EAAOC,MACZ,IIR6B,oBJc7B,IIZqB,cJanB,OAAO,eACFF,EADL,CAEEP,SAAUQ,EAAOE,QACjBR,SAAS,IAEb,IInBkC,yBJoBhC,OAAO,eACFK,EADL,CAEEP,SAAS,eACJQ,EAAOE,QADJ,CAENb,KAAK,GAAD,mBAAOU,EAAMP,SAASH,MAAtB,YAA+BW,EAAOE,QAAQb,SAEpDK,SAAS,IAEb,II1ByB,gBJ2BvB,OAAO,eACFK,EADL,CAEEL,SAAS,IAEb,QACE,OAAOK,IG9BXK,SFFa,WAAqC,IAA5BL,EAA2B,uDAArBX,EAAaY,EAAQ,uCAC/C,OAAOA,EAAOC,MACV,IGDgB,YHChB,MACuCD,EAAOE,QAAnCG,EADX,EACWA,OAAQC,EADnB,EACmBA,UAAUC,EAD7B,EAC6BA,SAEzB,OADAR,EAAMV,KAAKgB,GAAQC,GAAWC,EAC9B,eACOR,EADP,CAEIV,KAAK,YAAKU,EAAMV,QAExB,IGPoB,iBHQhB,OAAO,eACAU,EADP,CAEIV,KAAKW,EAAOE,UAEpB,QACI,OAAOH,IEZjBS,UDDa,WAAqC,IAA5BT,EAA2B,uDAArBX,EAAaY,EAAQ,uCAC/C,OAAQA,EAAOC,MACX,IEDgB,aFGhB,OAAO,eACIF,EADX,CAEQV,KAAKW,EAAOE,UAGpB,IEPgB,aFQhB,OAAO,eACAH,EADP,CAEIJ,KAAKK,EAAOE,UAEhB,IEXmB,gBFYnB,OAAO,eACAH,EADP,CAEIH,QAAQI,EAAOE,UAEnB,QACI,OAAOH,MGxBbU,EAAc,CAACC,KAEfC,EAAUC,OAAOC,8BAAgCD,OAAOC,+BAC5DC,YACEC,IAAe,WAAf,EAAmBN,GACnBG,OAAOC,8BAAgCD,OAAOC,gCAC5CE,IAAe,WAAf,EAAmBN,GAEVO,cACbC,EARmB,GAUnBN,G,gBCbaO,E,iLCCH,IAAD,EACyCC,KAAKC,MAA7C9B,EADD,EACCA,MAAOK,EADR,EACQA,KAAM0B,EADd,EACcA,MAAOC,EADrB,EACqBA,SAAUC,EAD/B,EAC+BA,MAEtC,OACE,yBAAKC,UAAU,cACb,2BAAOA,UAAU,cAAelC,GAChC,2BACEkC,UAAU,aACVvB,KAAK,OACLN,KAAOA,EACP0B,MAAQA,GAAS,GACjBC,SAAWA,IAEZC,GAAS,8BAAQA,Q,GAdFE,aCuBXC,G,MAAiB,SAACrC,GAAD,OAAU,SAAAsC,GAEpC,OAAOA,EAAS,CACZ1B,KJpBoB,iBIqBpBC,QAAQb,OC3BHmB,EAAU,SAACnB,GAAD,OAAS,SAAAsC,GAE5B,OAAOA,EAAS,CACR1B,KLIY,aKHZC,QAAQb,MAIPuC,EAAU,SAACvC,GAAD,OAAQ,SAAAsC,GAC3B,OAAOA,EAAS,CACZ1B,KLFgB,aKGhBC,QAAQb,MAGHwC,EAAa,SAACxC,GAAD,OAAQ,SAAAsC,GAC9B,OAAOA,EAAS,CACZ1B,KLPmB,gBKQnBC,QAAQb,MCZVyC,G,kBACJ,aAAe,IAAD,8BACZ,+CAOFC,YAAc,WAAO,IACXC,EAAU,EAAKjC,MAAfiC,MACJzB,EAAW,GAFG,EAGO,EAAKa,MAAvBf,EAHW,EAGXA,OAAOC,EAHI,EAGJA,UAEZC,ECIoB,YDLlByB,ECKkB,UAXC,WAIzB,IAHA,IACIA,EAAQ,IAEHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAJc,mBAIGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAGnC,OAAOJ,EDCQK,GAGb,EAAKC,SAAS,CAAEN,MAAOzB,IACzB,EAAKa,MAAMhB,SAAS,CAACC,SAAOC,YAAUC,cAhBpC,EAAKR,MAAQ,CACXiC,MCaoB,WDjBV,E,sEAsBJ,IACAA,EAAUb,KAAKpB,MAAfiC,MAER,OACE,yBACER,UAAU,OACVe,QAAUpB,KAAKY,YACfS,MAAO,CAAEC,gBAAiBT,S,GA9BfP,cELJK,EF0CAY,YAAQ,KAAK,CAACtC,SFzCN,SAACf,GAAD,OAAS,SAAAsC,GAE5B,OAAOA,EAAS,CACZ1B,KJCgB,YIAhBC,QAAQb,OEqCDqD,CAAyBZ,GGrClCa,G,kBACF,aAAe,IAAD,8BACV,+CAyBJC,cAAgB,WAAO,IAAD,EAC+D,EAAKxB,MAArCyB,GAD/B,EACVC,KADU,EACJnD,KADI,EACEoD,IADF,EACOC,WADP,EACmBC,WADnB,EAC+BJ,eAAehB,EAD9C,EAC8CA,aACxDjC,EAAY,EAAKG,MAAjBH,QACuB,IAA3BiD,EAAcjD,GACdiD,EAAcjD,GAAW,EACpBiD,EAAcjD,GAAW,EAClCiC,EAAagB,IA7Bb,EAAK9C,MAAQ,CACTmD,IAAK,EACLC,OAAQ,EACR9D,KAAM,GACNO,QAAS,GACTwD,UAAW,IARL,E,sEAkCJ,IAAD,SAC4EjC,KAAKC,MAA7D4B,GADpB,EACGF,KADH,EACSnD,KADT,EACeoD,IADf,EACoBC,YAAYC,EADhC,EACgCA,WAAYJ,EAD5C,EAC4CA,cAAehB,EAD3D,EAC2DA,aACxDjC,EAAYuB,KAAKpB,MAAjBH,QAER,OACI,yBAAK4B,UAAU,oBACVwB,EAAWK,KAAI,SAACP,EAAMC,GAAP,OACZ,yBAAKO,IAAKP,GACN,4BAAQvB,UAAU,iBAAiB8B,IAAKP,EAAKR,QAAS,WACvB,IAAvBM,EAAcE,IACdF,EAAcE,GAAO,EACrBlB,EAAagB,GACb,EAAKP,SAAS,CAAE1C,QAASiD,MAEzBA,EAAcE,GAAO,EACrBlB,EAAagB,GACbhB,EAAagB,GACb,EAAKP,SAAS,CAAE1C,QAASiD,OAE7BI,EAAWF,MACZnD,EAAQmD,IAAQ,yBAAKvB,UAAU,gBAC9B,4BAAQA,UAAU,iBAAiBe,QAAS,WAIhBS,EAAWO,OAAOR,EAAK,GAC5BE,EAAWM,OAAOR,EAAK,GACpBF,EAAcU,OAAOR,EAAK,GAEhDvC,EAAUwC,GACVpB,EAAUqB,GACVpB,EAAagB,GACb,EAAKP,SAAS,CAAE1C,QAASiD,MAX7B,UAcCC,EAAKO,KAAI,SAACH,EAAKM,GAAN,OACN,yBAAKF,IAAKE,EAAQhC,UAAU,YACvB0B,EAAIG,KAAI,SAACF,EAAQM,GAAT,OACL,yBACIjC,UAAU,OACV8B,IAAKG,EACLjB,MAAO,CAAEC,gBAAiBU,sB,GA5ExC1B,cAkHfiB,eANS,SAAA3C,GAAK,MAAK,CAC9B2D,UAAW3D,EAAMK,SAASf,KAC1B2D,WAAYjD,EAAMS,UAAUnB,KAC5B4D,WAAYlD,EAAMS,UAAUb,KAC5BkD,cAAe9C,EAAMS,UAAUZ,WAEK,CAAEY,YAAWoB,YAAWC,eAAcH,mBAA/DgB,CAAkFC,GC9G3FgB,E,YACJ,aAAe,IAAD,8BACZ,+CAaFrC,SAAW,SAAAsC,GACT,EAAKtB,SAAL,eACGsB,EAAEC,OAAOlE,KAAOiE,EAAEC,OAAOxC,SAhBhB,EAoBdyC,WAAa,WAAO,IAAD,EAEO,EAAK/D,MAArBmD,EAFS,EAETA,IAAKC,EAFI,EAEJA,OACb,EAAK/B,MAAM2C,eAAeb,EAAKC,IAvBnB,EA4Bda,gBAAkB,WAChB,EAAK5C,MAAM2C,eAAe,CAAEb,IAAK,EAAGC,OAAQ,IAC5Cc,YAAW,kBAAM,EAAK7C,MAAM2C,eAAe,EAAKhE,WA9BpC,EAgCdmE,cAAgB,WAAO,IAAD,EACa,EAAK9C,MAA9BsC,EADY,EACZA,UAAWlD,EADC,EACDA,UADC,EAEqD,EAAKY,MAAtE4B,EAFY,EAEZA,WAAYpB,EAFA,EAEAA,UAAWqB,EAFX,EAEWA,WAAWJ,EAFtB,EAEsBA,cAAchB,EAFpC,EAEoCA,aAChDuB,EAAc,EAAKrD,MAAnBqD,UAGRP,EAAcsB,KAAK,GACnBnB,EAAWmB,KAAKT,GAChBT,EAAWkB,KAAKf,GAChBvB,EAAagB,GACbrC,EAAUwC,GACVpB,EAAUqB,GAQV,EAAKX,SAAS,CAAE1C,QAAS,IACzB,EAAKoE,mBAjDL,EAAKjE,MAAQ,CACXmD,IAAK,EACLC,OAAQ,EACR9D,KAAM,GACNO,QAAS,EACTwD,UAAW,IARD,E,sEAwDJ,IAAD,SAC0BjC,KAAKpB,MAA9BH,EADD,EACCA,QAASsD,EADV,EACUA,IAAKC,EADf,EACeA,OADf,EAE4BhC,KAAKC,MAFjC,EAEC4B,WAFD,EAEaC,WAEpB,OACE,yBAAKzB,UAAU,iBACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAW7B,KAAK,MAAML,MAAM,MAAM+B,MAAO6B,EAAK5B,SAAUH,KAAKG,WAC7D,kBAAC,EAAD,CAAW3B,KAAK,SAASL,MAAM,SAAS+B,MAAO8B,EAAQ7B,SAAUH,KAAKG,WACtE,yBAAKE,UAAU,0BACb,4BAAQA,UAAU,SAASe,QAASpB,KAAK2C,YAAzC,kBACA,4BAAQtC,UAAU,sBAAsBe,QAASpB,KAAK6C,iBAAtD,sBACA,4BAAQxC,UAAU,2BAA2Be,QAAS,kBAAM,EAAKD,SAAS,CAAE1C,QAAS,MAArF,cACA,4BAAQ4B,UAAU,8BAA6B,kBAAC,IAAD,CAAMA,UAAW,eAAe4C,GAAI,YAApC,mBAE5CxE,GAAW,yBAAK4B,UAAU,aAC3B,2BAAOgB,MAAO,CAAC6B,aAAa,QAA5B,iBACA,2BACE7C,UAAU,aACVvB,KAAK,OACLN,KAAK,aACL2B,SAAU,SAAAsC,GAAC,OAAI,EAAKtB,SAAS,CAAEc,UAAWQ,EAAEC,OAAOxC,WAErD,4BAAQG,UAAU,SAASe,QAASpB,KAAK+C,eAAzC,uB,GAhFazC,aCTZkC,EDqHAjB,aANS,SAAA3C,GAAK,MAAK,CAChC2D,UAAW3D,EAAMK,SAASf,KAC1B2D,WAAYjD,EAAMS,UAAUnB,KAC5B4D,WAAYlD,EAAMS,UAAUb,KAC5BkD,cAAe9C,EAAMS,UAAUZ,WAEO,CAAEmE,eN5Gb,SAACb,EAAIoB,GAAL,OAAiB,SAAA3C,GAE1C,IADA,IAAMtC,EAAK,GACF4C,EAAE,EAAEA,EAAEiB,EAAIjB,IAAK,CACpB5C,EAAK4C,GAAG,GACR,IAAK,IAAIsC,EAAE,EAAEA,EAAED,EAAQC,IACnBlF,EAAK4C,GAAGsC,GGSM,UHNtB,OAAO5C,EAAS,CACZ1B,KJZoB,iBIapBC,QAAQb,MMkGyCmB,YAAWqB,eAAcD,YAAWF,mBAA9EgB,CAAiGiB,GE/G1Ga,G,kBACJ,aAAe,IAAD,8BACZ,+CAEKzE,MAAQ,CACXmD,IAAK,EACLC,OAAQ,GALE,E,sEAUJ,IAAD,SACiBhC,KAAKpB,MACtB2D,GAFA,EACCR,IADD,EACMC,OACMhC,KAAKC,MAAjBsC,WAGP,OACE,yBAAKlC,UAAU,kBACb,8CACC,kBAAC,EAAD,CAECuC,eAAiB,SAAA1E,GAAI,OAAI,EAAKiD,SAAS,CAAEY,IAAK7D,EAAK6D,IAAKC,OAAQ9D,EAAK8D,YAGtEO,EAAUL,KAAI,SAACH,EAAIM,GAAL,OACb,yBAAKF,IAAKE,EAAQhC,UAAU,YACzB0B,EAAIG,KAAI,SAACF,EAAOM,GAAR,OACP,kBAAC,EAAD,CACAH,IAAKG,EACLpD,OAAQmD,EACRlD,UAAWmD,EACXzB,MAAOmB,gB,GA/BO1B,cCNb+C,EDmDA9B,aAJO,SAAA3C,GAAK,MAAK,CAC9B2D,UAAU3D,EAAMK,SAASf,KACzB2D,WAAWjD,EAAMS,UAAUnB,QAEU,CAACmB,aAAzBkC,CAAqC8B,GEnDrCC,E,iLCEX,OACE,yBAAKjD,UAAU,aACb,mD,GAJeC,aCFR,GACb,CACEnC,MAAO,OACPoF,IAAK,KAEP,CACEpF,MAAO,UACPoF,IAAK,aCLMC,E,iLCEH,IAAD,EACiBxD,KAAKC,MAArB9B,EADD,EACCA,MAAOsF,EADR,EACQA,KAEf,OACE,wBAAIpD,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAW4C,GAAKQ,GAAStF,Q,GAN3BmC,aCDPoD,G,uLCKX,OACE,yBAAKrD,UAAU,UACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,YACXsD,EAASzB,KAAI,SAAC0B,EAAShC,GAAV,OACZ,kBAAC,EAAD,CACEO,IAAMP,EACNzD,MAAQyF,EAAQzF,MAChBsF,KAAOG,EAAQL,gB,GAVVjD,cCyBNuD,G,uLAjBX,OACE,kBAAC,IAAD,CAAUC,MAAQA,GAChB,yBAAKzD,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,IAAIC,UAAYZ,IAClC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,WAAWC,UAAWzC,IACxC,kBAAC,IAAD,CAAOyC,UAAYX,Y,GAVfhD,cCCE4D,QACW,cAA7BzE,OAAO0E,SAASC,UAEe,UAA7B3E,OAAO0E,SAASC,UAEhB3E,OAAO0E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.045d4cdc.chunk.js","sourcesContent":["import { TEST_REDUX } from '../type';\n\nconst initialState = {\n  data: '',\n  label: 'hello',\n  id: 'abcd'\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case TEST_REDUX:\n      return {\n        ...state,\n        data: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { GET_TRENDING_GIFS, GET_MORE_TRENDING_GIFS, GIPHY_LOADING,SEARCH_GIFS } from '../type';\n\nconst initialState = {\n  trending: {\n    offset: 0\n  },\n  loading: false\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_TRENDING_GIFS:\n      return {\n        ...state,\n        trending: action.payload,\n        loading: false\n      }\n    case SEARCH_GIFS:\n      return {\n        ...state,\n        trending: action.payload,\n        loading: false\n      }\n    case GET_MORE_TRENDING_GIFS:\n      return {\n        ...state,\n        trending: {\n          ...action.payload,\n          data: [ ...state.trending.data, ...action.payload.data ]\n        },\n        loading: false\n      }\n    case GIPHY_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    default:\n      return state;\n  }\n}","import {GET_COLOR} from '../type';\nimport {GENERATE_TILES} from '../type';\nconst initialState={\n    data:[]\n}\n\nexport default function(state=initialState,action) {\n    switch(action.type) {\n        case GET_COLOR:\n            const {rowIdx, columnIdx,newColor}=action.payload;\n            state.data[rowIdx][columnIdx]=newColor;\n            return{\n                ...state,\n                data:[ ...state.data ]\n            }\n        case GENERATE_TILES:\n            return {\n                ...state,\n                data:action.payload\n            }\n        default:\n            return state;\n\n            \n    }\n        \n}","import {SAVE_COLOR,NAME_COLOR,DISPLAY_COLOR} from '../type';\n\nconst initialState = {\n    data:[],\n    name:[],\n    display:[]\n}\n\nexport default function(state=initialState,action) {\n    switch (action.type) {\n        case SAVE_COLOR:\n            \n        return {\n                ...state,\n                data:action.payload\n                \n            }\n        case NAME_COLOR:\n        return {\n            ...state,\n            name:action.payload\n        }\n        case DISPLAY_COLOR:\n        return {\n            ...state,\n            display:action.payload\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport testReducer from './testReducer';\nimport giphyReducer from './giphyReducer';\nimport getColor from './getColor';\nimport savecolorReducer from './savecolorReducer';\nexport default combineReducers({\n  test: testReducer,\n  giphy: giphyReducer,\n  getcolor: getColor,\n  saveColor: savecolorReducer\n});","export const TEST_REDUX = 'TEST_REDUX';\n\n// GIPHY\nexport const GET_TRENDING_GIFS = 'GET_TRENDING_GIFS';\nexport const GET_MORE_TRENDING_GIFS = 'GET_MORE_TRENDING_GIFS';\nexport const SEARCH_GIFS='SEARCH_GIFS';\nexport const GIPHY_LOADING = 'GIPHY_LOADING';\nexport const GET_COLOR ='GET_COLOR';\nexport const GENERATE_TILES='GENERATE_TILES';\nexport const SAVE_COLOR='SAVE_COLOR';\nexport const NAME_COLOR='NAME_COLOR';\nexport const DISPLAY_COLOR='DISPLAY_COLOR';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleWares = [thunk];\nconst initialState = {};\nconst applyMW = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() ?\n  compose(\n    applyMiddleware(...middleWares),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ) : applyMiddleware(...middleWares);\n\nexport default createStore(\n  rootReducer,\n  initialState,\n  applyMW\n);","import TextInput from './TextInput';\n\nexport default TextInput;","import React, { Component } from 'react';\n\nclass TextInput extends Component {\n  render() {\n    const { label, name, value, onChange, error } = this.props;\n\n    return(\n      <div className=\"form-field\">\n        <label className=\"form-label\">{ label }</label>\n        <input \n          className=\"form-input\" \n          type=\"text\" \n          name={ name } \n          value={ value || '' }\n          onChange={ onChange } \n        />\n        {error && <span>{ error }</span>}\n      </div>\n    )\n  }\n}\n\nexport default TextInput;","import {GET_COLOR,GENERATE_TILES} from '../type';\nimport {randomColor} from '../../utils/common';\nimport {defaultcolor} from '../../utils/common';\nexport const getcolor =(data)=> dispatch=>{\n    \n    return dispatch({\n        type:GET_COLOR,\n        payload:data\n    })\n}\n\nexport const generate_tiles =(row,collumn) => dispatch =>{\n    const data=[];\n    for (let i=0;i<row;i++) {\n        data[i]=[];\n        for (let j=0;j<collumn;j++) {\n            data[i][j]=defaultcolor;\n        }\n    }\n    return dispatch({\n        type:GENERATE_TILES,\n        payload:data\n    })\n\n}\nexport const generate_tiles2 =(data) => dispatch =>{\n    \n    return dispatch({\n        type:GENERATE_TILES,\n        payload:data\n    })\n\n}","import {SAVE_COLOR,NAME_COLOR,DISPLAY_COLOR} from '../type';\n\nexport const saveColor=(data)=> dispatch => {\n    \n    return dispatch({\n            type:SAVE_COLOR,\n            payload:data\n        })\n    \n}\nexport const nameColor=(data)=>dispatch=>{\n    return dispatch({\n        type:NAME_COLOR,\n        payload:data\n    })\n}\nexport const displayColor=(data)=>dispatch=>{\n    return dispatch({\n        type:DISPLAY_COLOR,\n        payload:data\n    })\n}","import React, { Component } from 'react';\nimport { randomColor } from '../../utils/common';\nimport './Tile.scss';\nimport {connect} from 'react-redux';\nimport {getcolor} from '../../redux/actions/getColorActions';\nimport {defaultcolor} from '../../utils/common';\n\nclass Tile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      color: defaultcolor\n    }\n  }\n\n  updateColor = () => {\n    const { color } = this.state;\n    let newColor = '';\n    const {rowIdx,columnIdx}=this.props;\n    if (color !== defaultcolor) {\n      newColor = defaultcolor;\n    } else {\n      newColor = randomColor();\n    }\n\n    this.setState({ color: newColor });\n  this.props.getcolor({rowIdx,columnIdx,newColor});\n  }\n\n  render() {\n    const { color } = this.state;\n    \n    return (\n      <div \n        className=\"tile\" \n        onClick={ this.updateColor }\n        style={{ backgroundColor: color }}\n        \n      />\n    )\n  }\n}\n\nexport default connect(null,{getcolor})(Tile);","export const calcAverage = function() {\n  let sum = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    if (typeof arguments[i] === 'number') {\n      sum += arguments[i];\n    }\n  }\n  return sum / arguments.length;\n}\n\nexport const getDataFromLocalStorage = key => JSON.parse(localStorage.getItem(key));\n\nexport const saveDataToLocalStorage = (key, data) => localStorage.setItem(key, JSON.stringify(data));\n\nexport const randomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  \n  return color;\n}\n\nexport const defaultcolor='#FFFFFF';","import Tile from './Tile';\n\nexport default Tile;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { saveColor, nameColor, displayColor } from '../../../redux/actions/saveColorActions';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\nimport { Link } from 'react-router-dom';\nimport './GenerateHistory.scss';\nclass GenerateHistory extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            row: 0,\n            column: 0,\n            data: '',\n            display: [],\n            nameinput: '',\n            //savecolors: getDataFromLocalStorage('colortile'),\n            //namecolors: getDataFromLocalStorage('colorname')\n        }\n    }\n\n    // deleteTile=()=>{\n    //     const {savecolors,namecolors,saveColor,nameColor}=this.props;\n    //     const {item,name}=this.props;\n    //     const colortileUpdate=savecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(item));\n    //     const nameUpdate=namecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(name));\n    //     // const a=[1,2,3,4,5];\n    //     // const b=a.filter((data)=>data!==2);\n    //     // console.log('b',b);\n    //     saveColor(colortileUpdate);\n    //     nameColor(nameUpdate);\n\n    // }\n    changeDisplay = () => {\n        const { item, name, idx, savecolors, namecolors, displaycolors, displayColor } = this.props;\n        const { display } = this.state;\n        if (displaycolors[display] === 0) {\n            displaycolors[display] = 1\n        } else { displaycolors[display] = 0 };\n        displayColor(displaycolors);\n    }\n    render() {\n        const { item, name, idx, savecolors, namecolors, displaycolors, displayColor } = this.props;\n        const { display } = this.state;\n\n        return (\n            <div className=\"generate_history\">\n                {savecolors.map((item, idx) =>\n                    <div key={idx}>\n                        <button className=\"button-history\" key={idx} onClick={() => {\n                            if (displaycolors[idx] === 0) {\n                                displaycolors[idx] = 1;\n                                displayColor(displaycolors);\n                                this.setState({ display: displaycolors })\n                            } else {\n                                displaycolors[idx] = 0;\n                                displayColor(displaycolors);\n                                displayColor(displaycolors);\n                                this.setState({ display: displaycolors });\n                            }\n                        }}>{namecolors[idx]}</button>\n                        {!!display[idx] && <div className=\"history_item\">\n                            <button className=\"button-history\" onClick={() => {\n                                //const colortileUpdate=savecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(item));\n                                //const nameUpdate=namecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(namecolors[idx]));\n                                //const displayUpdate= \n                                const colortileUpdate = savecolors.splice(idx, 1);\n                                const nameUpdate = namecolors.splice(idx, 1);\n                                const displayUpdate = displaycolors.splice(idx, 1);\n\n                                saveColor(savecolors);\n                                nameColor(namecolors);\n                                displayColor(displaycolors);\n                                this.setState({ display: displaycolors });\n                                \n                            }}>Delete</button>\n                            {item.map((row, rowidx) =>\n                                <div key={rowidx} className=\"tile-row\">\n                                    {row.map((column, columnidx) =>\n                                        <div\n                                            className=\"tile\"\n                                            key={columnidx}\n                                            style={{ backgroundColor: column }}\n\n                                        />\n                                    )}\n\n                                </div>\n                            )}\n                        </div>\n                        }\n                    </div>\n                )}\n                {/* <button key={idx} onClick={this.changeDisplay}>{name}</button>   \n             {!!display && <div className=\"history_item\">\n                 <button onClick={this.deleteTile}>Delete</button>\n            {item.map((row, rowidx) =>\n              <div key={rowidx} className=\"tile-row\">\n                {row.map((column, columnidx) =>\n                  <div\n                    className=\"tile\"\n                    key={columnidx}\n                    style={{ backgroundColor: column }}\n\n                  />\n                )}\n              </div>\n            )}\n          </div>\n          } */}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    getcolors: state.getcolor.data,\n    savecolors: state.saveColor.data,\n    namecolors: state.saveColor.name,\n    displaycolors: state.saveColor.display\n})\nexport default connect(mapStateToProps, { saveColor, nameColor, displayColor, generate_tiles2 })(GenerateHistory);","import React, { Component } from 'react';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor, nameColor, displayColor } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport GenerateHistory from './GenerateHistory';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\n\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: 0,\n      nameinput: '',\n      //savecolors: getDataFromLocalStorage('colortile') || [],\n      //namecolors: getDataFromLocalStorage('colorname') || []\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onGenerate = () => {\n\n    const { row, column } = this.state;\n    this.props.generate_tiles(row, column);\n\n\n  }\n\n  setAllToDefault = () => {\n    this.props.generate_tiles({ row: 0, column: 0 });\n    setTimeout(() => this.props.generate_tiles(this.state));\n  }\n  savethiscolor = () => {\n    const { getcolors, saveColor } = this.props;\n    const { savecolors, nameColor, namecolors,displaycolors,displayColor } = this.props;\n    const { nameinput } = this.state;\n    //savecolors.push(getcolors);\n    \n    displaycolors.push(0);\n    savecolors.push(getcolors);\n    namecolors.push(nameinput);\n    displayColor(displaycolors);\n    saveColor(savecolors);\n    nameColor(namecolors);\n    \n    //console.log(savecolors);\n    //const {row, column}=this.state;\n    //this.props.generate_tiles2(savecolors);\n    /*savecolors.map((item,idx)=>{\n      this.props.generate_tiles2(item);\n    })*/\n    this.setState({ display: 0 });\n    this.setAllToDefault();\n    return;\n  }\n\n  render() {\n    const { display, row, column } = this.state;\n    const { savecolors, namecolors } = this.props;\n\n    return (\n      <div className=\"generate-form\">\n        <div className=\"generate-form-left\">\n          <TextInput name=\"row\" label=\"Row\" value={row} onChange={this.onChange} />\n          <TextInput name=\"column\" label=\"Column\" value={column} onChange={this.onChange} />\n          <div className=\"generate-form__buttons\">\n            <button className=\"button\" onClick={this.onGenerate}>Generate Tiles</button>\n            <button className=\"button button--grey\" onClick={this.setAllToDefault}>Set all to default</button>\n            <button className=\"button button--saveimage\" onClick={() => this.setState({ display: 1 })}>Save image</button>\n            <button className=\"button button-view-history\"><Link className =\"view_history\" to={'/history'}>View history</Link></button>\n            \n            {!!display && <div className=\"inputname\">\n              <label style={{marginBottom:\"5px\"}}> Insert Name </label>\n              <input\n                className=\"form-input\"\n                type=\"text\"\n                name=\"form-input\"\n                onChange={e => this.setState({ nameinput: e.target.value })}\n              />\n              <button className=\"button\" onClick={this.savethiscolor}> Save Name </button>\n            </div>}\n          </div>\n        </div>\n        {/* <div className=\"history\">History\n           {!!savecolors && <div className=\"history_item\">\n            {savecolors.map((data, idx) =>\n              <GenerateHistory\n                key={idx}\n                idx={idx}\n                item={data}\n                name={namecolors[idx]}\n              />\n            )}\n          </div>}\n\n          \n        </div> */}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data,\n  namecolors: state.saveColor.name,\n  displaycolors: state.saveColor.display\n})\nexport default connect(mapStateToProps, { generate_tiles,saveColor, displayColor, nameColor, generate_tiles2 })(GenerateForm);\n//chuyển tất cả các hàm trên về action","import GenerateForm from './GenerateForm';\n\nexport default GenerateForm;","import React, { Component } from 'react';\nimport { range } from 'lodash';\nimport GenerateForm from './GenerateForm';\nimport GenerateHistory from './GenerateForm/GenerateHistory';\nimport Tile from '../../components/Tile';\nimport './ColorfulTiles.scss';\nimport {connect} from 'react-redux';\nimport {saveColor} from '../../redux/actions/saveColorActions';\nclass ColorfulTiles extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      row: 0,\n      column: 0,\n    \n    }\n  }\n  \n  render() {\n    const { row, column } = this.state;\n    const {getcolors} =this.props;\n    \n\n    return (\n      <div className=\"colorful-tiles\">\n        <h2>Colorful Tiles</h2>\n         <GenerateForm \n         \n          generate_tiles={ data => this.setState({ row: data.row, column: data.column }) }\n        /> \n       {/* <GenerateHistory/> */}\n        {getcolors.map((row,rowidx)=>\n          <div key={rowidx} className=\"tile-row\"> \n            {row.map((column,columnidx)=>\n              <Tile \n              key={columnidx}\n              rowIdx={rowidx}\n              columnIdx={columnidx}\n              color={column}\n              />\n            )    }\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state => ({\n  getcolors:state.getcolor.data,\n  savecolors:state.saveColor.data\n})//sao cái naỳ là ngoặc đơn chứ không phải thuần là ngoặc nhọn state() ({getcolors:state.getcolor.data})\nexport default connect(mapStateToProps,{saveColor})(ColorfulTiles);","import ColorfulTiles from './ColorfulTiles';\n\nexport default ColorfulTiles;","import NotFound from './NotFound';\n\nexport default NotFound;","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return(\n      <div className=\"not-found\">\n        <h2>Page not found</h2>\n      </div>\n    )\n  }\n}\n\nexport default NotFound;","export default [\n  {\n    label: 'Home',\n    url: '/'\n  },\n  {\n    label: 'History',\n    url: '/history'\n  }\n]","import NavItem from './NavItem';\n\nexport default NavItem;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NavItem extends Component {\n  render() {\n    const { label, link } = this.props;\n\n    return (\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={ link }>{ label }</Link>\n      </li>\n    )\n  }\n}\n\nexport default NavItem;","import Header from './Header';\n\nexport default Header;","import React, { Component } from 'react';\nimport navItems from './data/navData';\nimport NavItem from './NavItem';\nimport './Header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <nav className=\"nav\">\n          <ul className=\"nav-list\">\n            {navItems.map((navItem, idx) =>\n              <NavItem\n                key={ idx }\n                label={ navItem.label }\n                link={ navItem.url }\n              />\n            )}\n          </ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport ColorfulTiles from './pages/ColorfulTiles';\nimport GenerateHistory from './pages/ColorfulTiles/GenerateForm/GenerateHistory';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={ store }>\n        <div className=\"app\">\n          <BrowserRouter>\n            <Header/>\n            <Switch>\n              <Route exact path=\"/\" component={ ColorfulTiles }/>\n              <Route exact path=\"/history\" component={GenerateHistory}/>\n              <Route component={ NotFound }/>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}