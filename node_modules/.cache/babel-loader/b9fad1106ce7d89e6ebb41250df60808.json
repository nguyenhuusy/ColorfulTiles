{"ast":null,"code":"import _classCallCheck from\"/Users/apple/Desktop/FrontEnd/reactjs2.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/apple/Desktop/FrontEnd/reactjs2.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/apple/Desktop/FrontEnd/reactjs2.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/apple/Desktop/FrontEnd/reactjs2.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/apple/Desktop/FrontEnd/reactjs2.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{randomColor}from'../../utils/common';import'./Tile.scss';import{connect}from'react-redux';import{getcolor}from'../../redux/actions/getColorActions';import{defaultcolor}from'../../utils/common';var Tile=/*#__PURE__*/function(_Component){_inherits(Tile,_Component);function Tile(){var _this;_classCallCheck(this,Tile);_this=_possibleConstructorReturn(this,_getPrototypeOf(Tile).call(this));_this.updateColor=function(){var color=_this.state.color;var newColor='';var _this$props=_this.props,rowIdx=_this$props.rowIdx,columnIdx=_this$props.columnIdx;if(color!==defaultcolor){newColor=defaultcolor;}else{newColor=randomColor();}_this.setState({color:newColor});_this.props.getcolor({rowIdx:rowIdx,columnIdx:columnIdx,newColor:newColor});};_this.state={color:defaultcolor};return _this;}_createClass(Tile,[{key:\"render\",value:function render(){var color=this.state.color;return React.createElement(\"div\",{className:\"tile\",onClick:this.updateColor,style:{backgroundColor:color}});}}]);return Tile;}(Component);export default connect(null,{getcolor:getcolor})(Tile);","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/reactjs2.github.io/src/components/Tile/Tile.jsx"],"names":["React","Component","randomColor","connect","getcolor","defaultcolor","Tile","updateColor","color","state","newColor","props","rowIdx","columnIdx","setState","backgroundColor"],"mappings":"i1BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA,MAAO,aAAP,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,QAAR,KAAuB,qCAAvB,CACA,OAAQC,YAAR,KAA2B,oBAA3B,C,GAEMC,CAAAA,I,8DACJ,eAAc,sCACZ,wEADY,MAQdC,WARc,CAQA,UAAM,IACVC,CAAAA,KADU,CACA,MAAKC,KADL,CACVD,KADU,CAElB,GAAIE,CAAAA,QAAQ,CAAG,EAAf,CAFkB,gBAGO,MAAKC,KAHZ,CAGXC,MAHW,aAGXA,MAHW,CAGJC,SAHI,aAGJA,SAHI,CAIlB,GAAIL,KAAK,GAAKH,YAAd,CAA4B,CAC1BK,QAAQ,CAAGL,YAAX,CACD,CAFD,IAEO,CACLK,QAAQ,CAAGR,WAAW,EAAtB,CACD,CAED,MAAKY,QAAL,CAAc,CAAEN,KAAK,CAAEE,QAAT,CAAd,EACF,MAAKC,KAAL,CAAWP,QAAX,CAAoB,CAACQ,MAAM,CAANA,MAAD,CAAQC,SAAS,CAATA,SAAR,CAAkBH,QAAQ,CAARA,QAAlB,CAApB,EACC,CApBa,CAGZ,MAAKD,KAAL,CAAa,CACXD,KAAK,CAAEH,YADI,CAAb,CAHY,aAMb,C,wDAgBQ,IACCG,CAAAA,KADD,CACW,KAAKC,KADhB,CACCD,KADD,CAGP,MACE,4BACE,SAAS,CAAC,MADZ,CAEE,OAAO,CAAG,KAAKD,WAFjB,CAGE,KAAK,CAAE,CAAEQ,eAAe,CAAEP,KAAnB,CAHT,EADF,CAQD,C,kBAlCgBP,S,EAqCnB,cAAeE,CAAAA,OAAO,CAAC,IAAD,CAAM,CAACC,QAAQ,CAARA,QAAD,CAAN,CAAP,CAAyBE,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { randomColor } from '../../utils/common';\nimport './Tile.scss';\nimport {connect} from 'react-redux';\nimport {getcolor} from '../../redux/actions/getColorActions';\nimport {defaultcolor} from '../../utils/common';\n\nclass Tile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      color: defaultcolor\n    }\n  }\n\n  updateColor = () => {\n    const { color } = this.state;\n    let newColor = '';\n    const {rowIdx,columnIdx}=this.props;\n    if (color !== defaultcolor) {\n      newColor = defaultcolor;\n    } else {\n      newColor = randomColor();\n    }\n\n    this.setState({ color: newColor });\n  this.props.getcolor({rowIdx,columnIdx,newColor});\n  }\n\n  render() {\n    const { color } = this.state;\n    \n    return (\n      <div \n        className=\"tile\" \n        onClick={ this.updateColor }\n        style={{ backgroundColor: color }}\n        \n      />\n    )\n  }\n}\n\nexport default connect(null,{getcolor})(Tile);"]},"metadata":{},"sourceType":"module"}