{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/ColorfulTiles/src/pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { saveColor, nameColor } from '../../../redux/actions/saveColorActions';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\nimport { Link } from 'react-router-dom';\n\nclass GenerateHistory extends Component {\n  constructor() {\n    super();\n\n    this.changeDisplay = () => {\n      const display = this.state.display;\n\n      if (display === 0) {\n        this.setState({\n          display: 1\n        });\n      } else {\n        this.setState({\n          display: 0\n        });\n      }\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: 0,\n      nameinput: '' //savecolors: getDataFromLocalStorage('colortile'),\n      //namecolors: getDataFromLocalStorage('colorname')\n\n    };\n  } // deleteTile=()=>{\n  //     const {savecolors,namecolors,saveColor,nameColor}=this.props;\n  //     const {item,name}=this.props;\n  //     const colortileUpdate=savecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(item));\n  //     const nameUpdate=namecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(name));\n  //     // const a=[1,2,3,4,5];\n  //     // const b=a.filter((data)=>data!==2);\n  //     // console.log('b',b);\n  //     saveColor(colortileUpdate);\n  //     nameColor(nameUpdate);\n  // }\n\n\n  render() {\n    const _this$props = this.props,\n          item = _this$props.item,\n          name = _this$props.name,\n          idx = _this$props.idx,\n          savecolors = _this$props.savecolors,\n          namecolors = _this$props.namecolors;\n    const display = this.state.display;\n    return React.createElement(\"div\", {\n      className: \"generate_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, savecolors.map((item, idx) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      key: idx,\n      onClick: this.changeDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, namecolors[idx]), !!display && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.deleteTile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Delete\"), item.map((row, rowidx) => React.createElement(\"div\", {\n      key: rowidx,\n      className: \"tile-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, row.map((column, columnidx) => React.createElement(\"div\", {\n      className: \"tile\",\n      key: columnidx,\n      style: {\n        backgroundColor: column\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data,\n  namecolors: state.saveColor.name\n});\n\nexport default connect(mapStateToProps, {\n  saveColor,\n  nameColor,\n  generate_tiles2\n})(GenerateHistory);","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/ColorfulTiles/src/pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx"],"names":["React","Component","connect","generate_tiles2","saveColor","nameColor","getDataFromLocalStorage","saveDataToLocalStorage","Link","GenerateHistory","constructor","changeDisplay","display","state","setState","row","column","data","nameinput","render","props","item","name","idx","savecolors","namecolors","map","deleteTile","rowidx","columnidx","backgroundColor","mapStateToProps","getcolors","getcolor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { saveColor ,nameColor} from '../../../redux/actions/saveColorActions';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\nimport {Link} from 'react-router-dom';\nclass GenerateHistory extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            row: 0,\n            column: 0,\n            data: '',\n            display: 0,\n            nameinput: '',\n            //savecolors: getDataFromLocalStorage('colortile'),\n            //namecolors: getDataFromLocalStorage('colorname')\n        }\n    }\n    \n    // deleteTile=()=>{\n    //     const {savecolors,namecolors,saveColor,nameColor}=this.props;\n    //     const {item,name}=this.props;\n    //     const colortileUpdate=savecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(item));\n    //     const nameUpdate=namecolors.filter((data)=>JSON.stringify(data)!==JSON.stringify(name));\n    //     // const a=[1,2,3,4,5];\n    //     // const b=a.filter((data)=>data!==2);\n    //     // console.log('b',b);\n    //     saveColor(colortileUpdate);\n    //     nameColor(nameUpdate);\n       \n    // }\n    changeDisplay=()=>{\n        const {display}=this.state;\n        if (display===0) {\n            this.setState({display:1})\n        } else {\n            this.setState({display:0})\n        }\n    }\n    render() {\n        const {item,name,idx,savecolors,namecolors}=this.props;\n        const {display}=this.state;\n        \n        return (\n            <div className=\"generate_history\">\n               {savecolors.map((item,idx)=>\n               <div>\n                   <button key={idx} onClick={this.changeDisplay}>{namecolors[idx]}</button>\n                   {!!display && <div className=\"history_item\">\n                 <button onClick={this.deleteTile}>Delete</button>\n            {item.map((row, rowidx) =>\n              <div key={rowidx} className=\"tile-row\">\n                {row.map((column, columnidx) =>\n                  <div\n                    className=\"tile\"\n                    key={columnidx}\n                    style={{ backgroundColor: column }}\n\n                  />\n                )}\n              </div>\n            )}\n          </div>\n          } \n               </div>\n               )} \n             {/* <button key={idx} onClick={this.changeDisplay}>{name}</button>   \n             {!!display && <div className=\"history_item\">\n                 <button onClick={this.deleteTile}>Delete</button>\n            {item.map((row, rowidx) =>\n              <div key={rowidx} className=\"tile-row\">\n                {row.map((column, columnidx) =>\n                  <div\n                    className=\"tile\"\n                    key={columnidx}\n                    style={{ backgroundColor: column }}\n\n                  />\n                )}\n              </div>\n            )}\n          </div>\n          } */}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    getcolors: state.getcolor.data,\n    savecolors: state.saveColor.data,\n    namecolors:state.saveColor.name\n})\nexport default connect(mapStateToProps, { saveColor,nameColor, generate_tiles2 })(GenerateHistory);"]},"metadata":{},"sourceType":"module"}